{"version":3,"sources":["components/confirmButton/index.tsx","components/jsonInput/index.js","components/planDisplay/index.tsx","App.tsx","index.tsx"],"names":["ConfirmButton","props","label","onClick","className","PLACEHOLDER","plans","title","price","fields","value","JSONInputFn","jsonInputRef","useRef","getJson","ref","placeholder","locale","style","outerBox","height","width","container","current","state","error","prevPlaceholder","jsObject","useStyles","makeStyles","root","padding","table","minWidth","pageTitle","display","justifyContent","fontWeight","fontSize","noBorder","border","selection","alignItems","PlanDisplay","jsonData","classes","React","useState","checked","setChecked","tableHeader","map","plan","tableRows","field","obj","values","target","find","x","data-testid","TableContainer","Table","TableHead","TableRow","TableCell","th","index","align","TableBody","row","component","scope","Checkbox","onChange","inputProps","App","setJsonData","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58582303.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\ninterface Props {\r\n  label: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst ConfirmButton = (props: Props) => {\r\n  const { label, onClick } = props;\r\n  return <div className='confirmButton-root' onClick={() => onClick()}>{label}</div>;\r\n};\r\n\r\nexport default ConfirmButton;\r\n","import React, { useRef } from \"react\";\r\nimport JSONInput from \"react-json-editor-ajrm\";\r\nimport locale from \"react-json-editor-ajrm/locale/en\";\r\nimport ConfirmButton from \"../confirmButton\";\r\nconst PLACEHOLDER = {\r\n  plans: [\r\n    {\r\n      title: \"Standard Plan\",\r\n      price: 0,\r\n      fields: [\r\n        {\r\n          label: \"fieldA\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldB\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldC\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldD\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldE\",\r\n          value: true,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Premium Plan\",\r\n      price: 10,\r\n      fields: [\r\n        {\r\n          label: \"fieldA\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldB\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldC\",\r\n          value: false,\r\n        },\r\n        {\r\n          label: \"fieldD\",\r\n          value: true,\r\n        },\r\n        {\r\n          label: \"fieldE\",\r\n          value: true,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n        title: \"Supreme Plan\",\r\n        price: 100,\r\n        fields: [\r\n          {\r\n            label: \"fieldA\",\r\n            value: true,\r\n          },\r\n          {\r\n            label: \"fieldB\",\r\n            value: true,\r\n          },\r\n          {\r\n            label: \"fieldC\",\r\n            value: true,\r\n          },\r\n          {\r\n            label: \"fieldD\",\r\n            value: true,\r\n          },\r\n          {\r\n            label: \"fieldE\",\r\n            value: true,\r\n          },\r\n        ],\r\n      },\r\n  ],\r\n};\r\n\r\nconst JSONInputFn = (props) => {\r\n  const jsonInputRef = useRef();\r\n  const { getJson } = props;\r\n  const submitJson = () => {\r\n    if ( jsonInputRef.current.state.error) return\r\n    getJson(\r\n      jsonInputRef.current.state.prevPlaceholder ||\r\n        jsonInputRef.current.state.jsObject\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <JSONInput\r\n        ref={jsonInputRef}\r\n        placeholder={PLACEHOLDER}\r\n        locale={locale}\r\n        style={{\r\n          outerBox: {\r\n            height: 0,\r\n            width: \"auto\",\r\n          },\r\n          container: {\r\n            height: \"80vh\",\r\n            width: \"-webkit-fill-available\",\r\n          },\r\n        }}\r\n      />\r\n      <ConfirmButton label=\"submit\" onClick={submitJson} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSONInputFn;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\ninterface Field {\r\n  label: string;\r\n  value: boolean;\r\n}\r\n\r\ninterface Plan {\r\n  title: string;\r\n  price: number;\r\n  fields: Array<Field>;\r\n}\r\n\r\ninterface Plans {\r\n  plans: Array<Plan>;\r\n}\r\n\r\ninterface Props {\r\n  jsonData: Plans;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"3rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  pageTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: \"4rem\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n  },\r\n  noBorder: {\r\n    border: 0,\r\n  },\r\n  selection: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst PlanDisplay = (props: Props) => {\r\n  const { jsonData } = props;\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState(\"\");\r\n\r\n  const handleChange = (value: string) => {\r\n    setChecked(value);\r\n  };\r\n\r\n  const tableHeader = jsonData.plans.map((plan) => plan.title);\r\n  const tableRows = jsonData.plans[0].fields.map((field) => {\r\n    const obj = { label: field.label, values: [] as Array<boolean> };\r\n    jsonData.plans.map((plan) => {\r\n      const target = plan.fields.find((x) => x.label === field.label) || {\r\n        value: false,\r\n      };\r\n      obj.values = [...obj.values, target.value];\r\n      return true;\r\n    });\r\n    return obj;\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.pageTitle} data-testid=\"display-plan-title\">Choose a Plan</div>\r\n      <TableContainer>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell></TableCell>\r\n              {tableHeader.map((th, index) => {\r\n                return (\r\n                  <TableCell key={index} align=\"center\">\r\n                    <div>{th}</div>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tableRows.map((row, index) => (\r\n              <TableRow key={index} >\r\n                <TableCell component=\"th\" scope=\"row\" data-testid=\"table-row-cell\">\r\n                  {row.label}\r\n                </TableCell>\r\n                {row.values.map((x) => {\r\n                  return (\r\n                    <TableCell align=\"center\">\r\n                      {x ? <CheckIcon /> : <ClearIcon />}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            ))}\r\n            <TableRow>\r\n              <TableCell\r\n                component=\"th\"\r\n                scope=\"row\"\r\n                className={classes.noBorder}\r\n              ></TableCell>\r\n              {jsonData.plans.map((plan) => {\r\n                return (\r\n                  <TableCell className={classes.noBorder} align=\"center\">\r\n                    <div className={classes.selection}>\r\n                      <Checkbox\r\n                        checked={plan.title === checked}\r\n                        onChange={() => handleChange(plan.title)}\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                      />\r\n                      <div>\r\n                        <b>{`HKD${plan.price} `}</b>\r\n                        {\"/Month\"}\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlanDisplay;\r\n","import React, { useState } from \"react\";\r\nimport JsonInput from \"./components/jsonInput\";\r\nimport PlanDisplay from \"./components/planDisplay\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [jsonData, setJsonData] = useState({\r\n    plans: []\r\n  });\r\n  const getJson = (value: any) => {\r\n    setJsonData(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      {jsonData.plans.length === 0 ? (\r\n        <JsonInput getJson={getJson} />\r\n      ) : (\r\n        <PlanDisplay jsonData={jsonData} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}